# Imagen base
FROM python:3.9-slim

# Variables de entorno
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV PATH="/root/.local/bin:$PATH"

# Instalar dependencias del sistema
RUN apt-get update && apt-get install -y \
    git \
    curl \
    nodejs \
    npm \
    && rm -rf /var/lib/apt/lists/*

# Instalar Poetry
RUN curl -sSL https://install.python-poetry.org | python3 -

# Establecer directorio de trabajo
WORKDIR /app

# Copiar archivos del proyecto
COPY . /app/

# Instalar dependencias con Poetry y asegurarse de que todas las dependencias necesarias est√©n instaladas
RUN cd /app && \
    poetry config virtualenvs.create false && \
    poetry install --no-interaction --no-ansi --no-root && \
    pip install pyyaml imageio jinja2 pillow numpy

# Instalar dependencias para la interfaz web
WORKDIR /app/docker-gui/web-interface
RUN npm install

# Preparar directorios para tiles y manifiestos
WORKDIR /app
RUN mkdir -p /app/iiif/image /app/iiif/manifest && chmod -R 777 /app/iiif && \
    mkdir -p /app/data/uploads /app/data/exports /app/data/viewers /app/data/public /app/data/iiif && \
    chmod -R 777 /app/data

# Copy IIIF server for Docker app to data directory
COPY iiif-server-for-docker-app.py /app/data/server.py

# Exponer puertos
EXPOSE 8000 8080

# Volumen para datos persistentes
VOLUME ["/app/data"]
